////////////////////////API-data/////////////////////////////////////////////////////////////////////////////

* API Key (v3 auth):
9f7f9169fbd0fc724b70f674717dd049

*  Example API Request:
https://api.themoviedb.org/3/movie/550?api_key=9f7f9169fbd0fc724b70f674717dd049

*  API Read Access Token (v4 auth)
eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5ZjdmOTE2OWZiZDBmYzcyNGI3MGY2NzQ3MTdkZDA0OSIsInN1YiI6IjYxZmNlYzlkN2E5N2FiMDBlNDY3NmIyZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2jnu-0b6PHIx00PiEzS4zhO0LDFLgSbDJedx6l3rNSY

//////////////////////////Project-steps//////////////////////////////////////////////////////////////////////////

- Create an empty folder

- npx create-react-app netflix-clone
	which will create the basic starting file (shortcut)

- create new project on firebase and apply the CLI link only for the beggining

Note: write "ls" in the command line (terminal) to know if you are in the right git path
///////////////////////////////
- Axios: 
	In ReactJS, Axios is a library that serves to create HTTP requests that are present externally. 
It is evident from the fact that we may sometimes in React applications need to get data from the external source. ... 
Additionally, react Axios is very easy to modify and is quite lightweight.

	to run axios: npm i axios

Note: 
 - we'll use Axios instead of Postman
 - it used instead of fetch('url') and converting it to json() ==> it make those two line in one line only
///////////////////////////////
- install "ES7 + React/Redux/React-Native snippets" to use them
* rfce snippet: is to write the basic React Component code (depends on the name of the component file)

Row.css:
	object-fit: contain;       is to contain the object within container (with the applied high and width)

////

CSS: About Scroll:

	.row__posters {
  display: flex;
  overflow-y: hidden;
  overflow-x: scroll;
	}

	.row__posters::-webkit-scrollbar {
  display: none;
	}

////

CSS: About transform, transition & width/object fit:
	.row__poster {
  object-fit: contain;
  width: 100%;
  max-height: 100px;
  transition: transform 450ms;
	}

	.row__poster:hover {
  transform: scale(1.08);
	}

////

CSS:

	style = {{	backgroundSize: 'cover'}, {backgroundPosition: "center center"}}
	backgroundSize: 'cover' ==> means use all up the size inside the container 
	backgroundPosition: "center center" ==> means center the backgroundPosition

///

CSS: rem 
	width: 45rem;  ==> means 45 root element (which is 16px - the default of font-size pixels)

///

CSS: line-height: 1.3   ==> means :the space between lines

///

CSS: button style
	:hover  ==>    transition: all 0.5s;  with color & backgroundColor styles

	.banner__button:hover {
  color: #000;
  background-color: #e6e6e6;
  transition: all 0.5s;
  }

	For more button styles see ".banner__button" style (you can copy and past it) :

	.banner__button {
  cursor: pointer;
  color: #fff;
  outline: none;
  border: none;
  font-weight: 700;
  border-radius: 0.2vw;
  padding-left: 2rem;
  padding-right: 2rem;
  margin-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  background-color: rgba(51, 51, 51, 0.5);
	}

///

CSS: transparency/transparent in the .banner--fadeBottom

	.banner--fadeBottom {
  height: 118px;
  background-image: linear-gradient(
    180deg,
    transparent,
    rgba(37, 37, 37, 0.61),
    #111
  );
	}

	To add transparency, we use the rgba() function to define the color stops. The last parameter in the rgba() function can be a value from 0 to 1, and it defines the transparency of the color: 0 indicates full transparency, 1 indicates full color (no transparency).
	
			EX:
				#grad {
  				background-image: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1));
				}

///

CSS: Animation / transition / fading:
    
  transition-timing-function: ease-in;
  transition: all 0.5s;
  }

  .nav__blacked {
  background-color: #000;
  }

  /// 
  
npm installations:

  npm i react-youtube  ==> to popup youtube trailers
  &
  npm i movie-trailer

  ///

